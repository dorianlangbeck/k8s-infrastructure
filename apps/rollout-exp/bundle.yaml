---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redisapp
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:4-32bit
        resources:
          requests:
            cpu: 200m
            memory: 100Mi
          limits:
            cpu: 300m
            memory: 150Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redisapp
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: realtimeapp
  labels:
    app: realtime
spec:
  selector:
    matchLabels:
      app: realtime
  replicas: 5
  template:
    metadata:
      labels:
        app: realtime
    spec:
      containers:
      - name: realtimeapp
        image: argoproj/rollouts-demo:yellow
        env:
        - name: REDISHOST
          value: "redisapp:6379"
        resources:
          requests:
            cpu: 25m
            memory: 50Mi
          limits:
            cpu: 150m
            memory: 150Mi
        ports:
        - containerPort: 8080
  strategy:
    canary:
      stableService: realtimeapp-stable
      canaryService: realtimeapp-canary
      trafficRouting:
        nginx:
          stableIngress: realtimeapp-ingress
      steps:
      - setWeight: 20
      - pause: {duration: 10}
      - setWeight: 60
      - pause: {duration: 10}
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: canary-demo
  annotations:
    repository: dorianlangbeck/testing

spec:
  replicas: 5
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: canary-demo
  template:
    metadata:
      labels:
        app: canary-demo
    spec:
      containers:
      - name: canary-demo
        image: argoproj/rollouts-demo:blue
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: 32Mi
            cpu: 5m
          limits:
            cpu: 150m
            memory: 150Mi
  strategy:
    canary:
      canaryService: canary-demo-preview
      steps:
      - setWeight: 20
      - pause: {duration: 10}
      - setWeight: 60
      - pause: {duration: 10}
---
apiVersion: v1
kind: Service
metadata:
  name: realtimeapp-stable
  labels:
    app: realtime
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: realtime
---
apiVersion: v1
kind: Service
metadata:
  name: realtimeapp-canary
  labels:
    app: realtime
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: realtime
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: realtimeapp-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
spec:
  rules:
  - host: example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: realtimeapp-stable
            port:
              number: 80
